1)Write a program to implement a binary search algorithm.

def binarysearch(low,high,nums,target: int):
    mid=(low+high)//2
    if low>high:
        return 0
    if low<=high:
        if nums[mid]==target:
            return True
        elif nums[mid]>target:
            return binarysearch(low,mid-1,nums,target)
        else:
            return binarysearch(mid+1,high,nums,target)
    
lst=[1,3,5,20,45,65,76,82]
n=64
res=binarysearch(0,len(lst)-1,lst,n)
if res:
    print("yes")
else:
    print("no")

--------------------------------------------------------------------------------------------------------------------------------------------
2)  Write a program to find the GCD (Greatest Common Divisor) of two numbers.

class Solution:
    def findGCD(self, nums: List[int]) -> int:
        x=min(nums)
        y=max(nums)
        maxi=0
        for i in range(1,x+1):
            if x%i==0 and y%i==0 and i >maxi:
                maxi=i
        return maxi
--------------------------------------------------------------------------------------------------------------------------------------------
3) Write a program to find the Fibonacci sequence up to a given number.

class Solution:
    def fib(self, n: int) -> int:
        a=-1
        b=1
        for i in range(n+1):
            c=a+b
            a,b=b,c
            
        return c
--------------------------------------------------------------------------------------------------------------------------------------------
4) Write a program to check if a number is a prime number.

x=24
flag=True
for i in range(2,x//2):
    if x%i==0:
        flag=False
        break
if flag:
    print("Prime")
else:
    print("Not a prime")

--------------------------------------------------------------------------------------------------------------------------------------------
5)Write a program to implement a stack data structure.

import java.util.*;
import java.io.*;
public class Stack<T>
{
    private ArrayList<T> items;
    public Stack(){
        items=new ArrayList<>();
    }
    public void push(T item)
    {
        items.add(0, item);
    }
    public T pop()
    {
        if(items.isEmpty())
        {
            throw new IllegalStateException("Stack is empty");
        }
        return items.remove(0);
    }
    public T peek(){
        if(items.isEmpty())
        {
            throw new IllegalStateException("Stack is empty");
        }
        return items.get(0);
    }
    public void print(){
        for (T t : items) {
            System.out.println(t);
        }
    }
    public int search(T item){
        int index1=items.indexOf(item);
        return index1;
    }
    public static void main(String[] args) {
        Scanner input=new Scanner(System.in);
        Stack<Integer> stack=new Stack<>();
        stack.push(20);
        stack.push(30);
        stack.push(40);
        stack.push(50);
        System.out.println("STACK");
        stack.print();
        System.out.println("pop : "+stack.pop()); 
        System.out.println("STACK");
        stack.print();
        System.out.println("peek : "+stack.peek()); 
        System.out.println("STACK");
        stack.print();
        int searchitem;
        System.out.println("enter search : ");
        searchitem=input.nextInt();
        System.out.println("Search result : "+stack.search(searchitem));
    }
}

--------------------------------------------------------------------------------------------------------------------------------------------
6) Write a program to implement a queue data structure.

import java.util.*;
import java.io.*;
public class queue<T>{
    private ArrayList<T> items;
    public queue(){
        items=new ArrayList<>();
    }
    public void enqueue(T item){
        items.add(item);
    }
    public T dequeue(){
        if (items.isEmpty())
        {
            throw new IllegalStateException("queue is empty");
        }
        return items.remove(0);
    }
    public int search(T searchitem){
        int index=items.indexOf(searchitem);
        return index;
    }
    public void print(){
        for (T t : items) {
            System.out.println(t);
        }
    }
    public static void main(String[] args) {
        queue<Integer> que=new queue<>();
        que.enqueue(10);
        que.enqueue(20);
        que.enqueue(30);
        que.enqueue(40);
        que.enqueue(50);
        System.out.println("The queue");
        que.print();
        que.dequeue();
        System.out.println("The queue");
        que.print();
    }

}

--------------------------------------------------------------------------------------------------------------------------------------------
7)Write a program to merge two sorted arrays into a single sorted array

class Solution:
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        for i in range(m,m+n):
            nums1[i]=nums2[i-m]
        nums1.sort()

--------------------------------------------------------------------------------------------------------------------------------------------
8)Write a program to reverse a sentence without reversing the words.

s="I am rohini"
s=list(s.split())
print(*s[::-1])

--------------------------------------------------------------------------------------------------------------------------------------------
9)Write a program to find the power of a number using recursion.

def power(n,p):
    if p==0:
        return 1
    elif p==1:
        return n
    else:
        return n*power(n,p-1)
n=2
p=10
res=power(n,p)
print(res)

--------------------------------------------------------------------------------------------------------------------------------------------
10)Write a program to find the number of occurrences of a given element in an array.

lst=[1,2,3,4,1,2,3,5,6,1,2,1,1,1]
n=1
print(lst.count(n))

--------------------------------------------------------------------------------------------------------------------------------------------
11)Write a program to find the third largest element in an array.

lst=[1,2,3,4,1,2,3,5,6,1,2,1,1,1]

lst=list(set(lst))
print(lst[2])

--------------------------------------------------------------------------------------------------------------------------------------------
12)Write a program to sort an array in descending order using the selection sort algorithm.

lst=[10,13,54,24,86,46,37,97]
for i in range(len(lst)):
    mini=lst[i]
    k=i
    for j in range(i,len(lst)):
        if lst[j]<mini:
            mini=lst[j]
            k=j
    temp=lst[i]
    lst[i]=lst[k]
    lst[k]=temp
print(lst)

--------------------------------------------------------------------------------------------------------------------------------------------
13)Write a program to find the factorial of a number without using recursion

n=5
fact=1
for i in range(1,n+1):
    fact *= i
print(fact)

--------------------------------------------------------------------------------------------------------------------------------------------
14) Write a program to find the LCM (Least Common Multiple) of two numbers.

n1=7
n2=5
for i in range(max(n1,n2),n1*n2+1):
    if i%n1==0 and i%n2==0:
        print("The lcm is ",i)
        break

--------------------------------------------------------------------------------------------------------------------------------------------
15)Write a program to implement a linked list data structure.
