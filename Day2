1)
The binary number system only uses two digits, 0 and 1. Any string that represents a number in the binary number system can be called a binary string. You are required to implement the following function: 

int OperationsBinaryString(char *str);

The function accepts a string 'str' as its argument. The string 'str' consists of binary digits separated with an alphabet as follows: 

'A' denotes AND operation 
'B' denotes OR operation 
'C' denotes XOR operation 
You are required to calculate the result of the string 'str', scanning the string left to right, taking one operation at a time, and return the same. 

Note:

No order of priorities of operations is required. 
Length of 'str' is odd 
If 'str' is NULL or None(in case of python), return -1 


Example:
Input: 
str: ICOCICIAOBI 

Output: 
1 

Explanation: 

The alphabet in 'str' when expanded becomes "1 XOR 0 XOR 1 XOR 1 AND 0 OR 1", the result of the expression becomes 1, hence 1 is returned.
Coding:
*******
string='1C0C1C1A0B1'
res=int(string[0])
for i in range(len(string)):
    if string[i]=='A':
        res=res and int(string[i+1])
    elif string[i]=='B':
        res=res or int(string[i+1])
    elif string[i]=='C':
        res=res ^ int(string[i+1])
print(res)
---------------------------------------------------------------------------------------------------------------------
2)
Execute the given function.
def LargeSmallSum(arr)

The function takes an integral arr which is of the size or length of its arguments. Return the sum of the second smallest element at odd position ‘arr’ and the second largest element at the even position.

Assumption

Every array element is unique.
Array is 0 indexed.
Note:

If the array is empty, return 0.
If array length is 3 or <3, return 0.
 
Example

Input:
Arr: 3 2 1 7 5 4

Output:
7
Coding:
*******
def sumOfMaximum(arr):
    odd=[]
    even=[]
    for i in range(len(arr)):
        if i%2==0:
            even.append(arr[i])
        else:
            odd.append(arr[i])
    even.sort()
    odd.sort()
    return even[-2]+odd[1]
n=int(input('Enter range : '))
lst=[]
for i in range(n):
    a=int(input())
    lst.append(a)
print("The sum is = ",end=" ")
print(sumOfMaximum(lst))
----------------------------------------------------------------------------------------------------------------------------------------
3)
Perform the following function. 
def Productsmallpair(sum,arr)

This function accepts the integers sum and arr. It is used to find the arr(j) and arr(k), where k ! = j. arr(j) and arr(k) should be the smallest elements in the array.

Keep this in mind:

If n<2 or empty, return –1.
If these pairs are not found, then return to zero.
Make sure all the values are within the integer range.
 
Example

Input:
Sum: 9
Arr: 5 4 2 3 9 1 7

Output:
2

Explanation

From the array of integers, we have to select the two smallest numbers, i.e 2 and 1. Sum of these two (2 + 1) = 3. This is less than 9 (3 < 9). The product of these two is 2 (2 x 1 = 2) Hence the output is integer 2.

Sample input:
Sum: 4
Arr: 9 8 –7 3 9 3

Sample output:
–21
Coding:
******
sum1=int(input())
arr=list(map(int,input().split()))
arr.sort()
if len(arr)<2:
    print('-1')
elif sum(arr[-2:])<=sum1:
    print(arr[-1]*arr[-2])
else: 
    print('0')
